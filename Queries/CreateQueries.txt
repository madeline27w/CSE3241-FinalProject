CREATE TABLE STOREFRONT   

(Storefront_id	INT		NOT NULL,   

Name		VARCHAR(40)	NOT NULL,   

Banner		blob NOT NULL,   

Description	VARCHAR(1000) NOT NULL,   

Seller_photo	blob	NOT NULL,   

Seller_bio	VARCHAR(500)	NOT NULL,   

Product_ID	INT		NOT NULL,   

SELLER_ID	INT		NOT NULL,   

PRIMARY KEY(Storefront_ID),   

Foreign KEY(Product_ID) REFERENCES PRODUCT,   

Foreign KEY(Seller_ID) REFERENCES USER);  

 
CREATE TABLE STOREFRONT_IMAGES   

(storeimage_id	INT		NOT NULL,   
 storefront_id	INT 	NOT NULL,
Image		blob	NOT NULL,   

PRIMARY KEY(storeimage_id),   

FOREIGN KEY(storefront_id) REFERENCES STOREFRONT);  



CREATE TABLE PRODUCT_IMAGES   

(pImage_id	INT		NOT NULL,   
 product_id		INT 	NOT NULL,
 image			blob	NOT NULL,   

PRIMARY KEY(pImage_id),   

FOREIGN KEY(product_id) REFERENCES PRODUCT);  
 

CREATE TABLE STOREFRONT_URLS   

(
  url_id		INT		NOT NULL,
  Storefront_id	INT		NOT NULL,   

  URL		VARCHAR(100)	NOT NULL,   

  PRIMARY KEY(url_id),   

  FOREIGN KEY(Storefront_ID) REFERENCES STOREFRONT);    

 

CREATE TABLE SERVER   

( Server_id	INT	NOT NULL,   

Capacity	INT	NOT NULL,   

PRIMARY KEY(Server_id)); 

 
CREATE TABLE PRODUCT   

(Product_ID	INT		NOT NULL,   
Title		VARCHAR(20)	NOT NULL,   
DESCRIPTION	VARCHAR(200)  NOT NULL,   
Price		INT		NOT NULL,   
File_Type	VARCHAR(5)	NOT NULL,   
Seller_Id	INT 		NOT NULL,
PRIMARY KEY(Product_ID),   
FOREIGN KEY(Seller_Id) REFERENCES SELLER);  
 

CREATE TABLE SHOWS_PRODUCT   

 

(Shows_ID		 INT Not NULL,  

Storefront_ID    INT NOT NULL,   

Product_ID       INT NOT NULL,  

PRIMARY KEY(Shows_ID),  

FOREIGN KEY(Storefront_ID) REFERENCES STOREFRONT,  

FOREIGN KEY(Product_ID) REFERENCES PRODUCT);  

 

CREATE TABLE HOSTED_BY   

(  

Host_ID			INT NOT NULL, 

Storefront_ID   INT NOT NULL,   

Server_id		INT NOT NULL,  

PRIMARY KEY(Host_ID),  

FOREIGN KEY(Storefront_ID) REFERENCES STOREFRONT,   

FOREIGN KEY(Server_ID) REFERENCES SERVER);  


CREATE TABLE "ORDER_HAS" 
(OrderHas_Id INT PRIMARY KEY NOT NULL,
 amount		 INT 			 NOT NULL,
 Order_ID INT NOT NULL,
 Payment_ID INT NOT NULL,
 FOREIGN KEY(Order_id) REFERENCES ORDERS,
 FOREIGN KEY(Payment_id) REFERENCES PAYMENT_TYPE);


CREATE TABLE ORDERS   
(  
Order_ID   INT        NOT NULL,   
Order_date  DATE 	   NOT NULL,   
PlacedBy_ID INT	   	   NOT NULL,   
PRIMARY KEY(Order_ID),  
FOREIGN KEY(PlacedBy_ID) REFERENCES PLACED_BY);  

 

CREATE TABLE PROD_RATING 
( Rating_ID		INT NOT NULL,  
 product_id	INT NOT NULL,  
  BuyerRating	INT NOT NULL,  
  SellerRating	INT NOT NULL,  
  PlacedBy_ID	INT NOT NULL,  
  PRIMARY KEY(Rating_ID),  
  FOREIGN KEY(PlacedBy_ID) REFERENCES PLACED_BY); 

 

CREATE TABLE PLACED_BY 
( 
  Placed_ID	INT NOT NULL, 
  Cust_ID	INT NOT NULL, 
  PRIMARY KEY(Placed_ID), 
  FOREIGN KEY(Cust_ID) REFERENCES USER); 

CREATE TABLE ORDER_BY   
(   
OrderBy_ID INT NOT NULL,   
Product_ID INT NOT NULL,   
Order_ID   INT NOT NULL,  
PRIMARY KEY(OrderBy_ID),   
FOREIGN KEY(Order_ID) REFERENCES ORDERS,  
FOREIGN KEY(Product_ID) REFERENCES PRODUCT);  

CREATE TABLE FEEDBACK   
(  
Feed_ID    INT      NOT NULL,   
Stars      INT      NOT NULL,    
order_id   INT		NOT NULL,  
Comment    VARCHAR(200)  NOT NULL,   
Cust_feed  InT,  
Sell_feed  INT,  
Prod_feed  INT,  
PRIMARY KEY(Feed_ID),  
FOREIGN KEY(Prod_feed) REFERENCES PRODUCT,  
FOREIGN KEY(Cust_feed) REFERENCES USER,  
FOREIGN KEY(Sell_feed) REFERENCES SELLER,  
FOREIGN KEY(order_id) REFERENCES ORDERS);   

CREATE TABLE WISHLIST   
 
(Wish_ID         INT      NOT NULL,    
 cust_id		 INT 	  NOT NULL,

PRIMARY KEY(Wish_ID)
FOREIGN KEY(cust_id) REFERENCES CUSTOMER);

CREATE TABLE ITEMS_ON_LIST   
(  
List_inventory	INT	NOT NULL,   
Wishlist_ID		INT	NOT NULL,   
Product_id		INT NOT NULL,  
PRIMARY KEY(List_inventory),   
FOREIGN KEY(Product_id) REFERENCES PRODUCT,   
FOREIGN KEY(Wishlist_ID) REFERENCES WISHLIST);   

CREATE TABLE CUSTOMER   

(cust_id	INT		NOT NULL,   
name		VARCHAR(40)	NOT NULL,
preffered	INT,
karma		INT,
PRIMARY KEY(cust_id)); 

CREATE TABLE SELLER 
(
  Seller_id	INT		NOT NULL,
  karma 	INT 	NOT NULL,
  email		VARCHAR(20)	NOT NULL,
  name		VARCHAR(20) NOT NULL,
PRIMARY KEY(Seller_ID)); 


CREATE TABLE PAYMENT_TYPE 
(
  payment_id	INT		NOT NULL,
  payment_type	varchar(10) NOT NULL,
  cc			CHAR(16),
  bank			CHAR(9),
  cust_id		INT 	NOT NULL,
PRIMARY KEY(payment_id)
FOREIGN KEY(cust_id) REFERENCES CUSTOMER); 



CREATE TABLE EMAILS
(
  email_id	INT		NOT NULL,
  
  cust_id	INT 	NOT NULL,
  email		VARCHAR(20) NOT NULL,
PRIMARY KEY(email_id)
FOREIGN KEY(cust_id) REFERENCES CUSTOMER);

CREATE TABLE KEYWORDS   

(
  keyword_id	INT		NOT NULL,
  product_id	INT 	NOT NULL,
  word			VARCHAR(10)	NOT NULL,
  PRIMARY KEY(keyword_id),   
  FOREIGN KEY(product_id) REFERENCES STOREFRONT);  